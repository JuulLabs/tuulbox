public final class com/juul/tuulbox/collections/FlowConcurrentMap : java/util/concurrent/ConcurrentMap {
	public fun <init> ()V
	public fun <init> (Ljava/util/concurrent/ConcurrentMap;)V
	public synthetic fun <init> (Ljava/util/concurrent/ConcurrentMap;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public final fun getOnChanged ()Lkotlinx/coroutines/flow/Flow;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class com/juul/tuulbox/collections/FlowConcurrentMapKt {
	public static final fun withFlow (Ljava/util/concurrent/ConcurrentMap;)Lcom/juul/tuulbox/collections/FlowConcurrentMap;
}


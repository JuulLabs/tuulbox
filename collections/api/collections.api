public final class com/juul/tuulbox/collections/AtomicMap : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public final fun clear ()V
	public fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public synthetic fun entrySet ()Ljava/util/Set;
	public final fun entrySet ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getAndMutate (Lkotlin/jvm/functions/Function1;)Lkotlinx/collections/immutable/ImmutableMap;
	public fun getEntries ()Lkotlinx/collections/immutable/ImmutableSet;
	public final fun getFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getKeys ()Lkotlinx/collections/immutable/ImmutableSet;
	public final fun getOrPut (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun getSize ()I
	public final fun getSnapshot ()Lkotlinx/collections/immutable/ImmutableMap;
	public fun getValues ()Lkotlinx/collections/immutable/ImmutableCollection;
	public fun isEmpty ()Z
	public synthetic fun keySet ()Ljava/util/Set;
	public final fun keySet ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public final fun mutate (Lkotlin/jvm/functions/Function1;)V
	public final fun mutateAndGet (Lkotlin/jvm/functions/Function1;)Lkotlinx/collections/immutable/ImmutableMap;
	public final fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun set (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun size ()I
	public synthetic fun values ()Ljava/util/Collection;
	public final fun values ()Lkotlinx/collections/immutable/ImmutableCollection;
}

public final class com/juul/tuulbox/collections/SynchronizedMap : java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun <init> ()V
	public fun <init> (I)V
	public fun <init> (IF)V
	public fun <init> (Ljava/util/Map;)V
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public final fun getLock ()Ljava/util/concurrent/locks/ReentrantLock;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public final fun synchronized (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun values ()Ljava/util/Collection;
}

public final class com/juul/tuulbox/collections/SynchronizedMapKt {
	public static final fun synchronizedMapOf ()Lcom/juul/tuulbox/collections/SynchronizedMap;
	public static final fun synchronizedMapOf ([Lkotlin/Pair;)Lcom/juul/tuulbox/collections/SynchronizedMap;
}


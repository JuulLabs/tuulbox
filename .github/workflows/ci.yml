name: CI
on:
  pull_request:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: "adopt-hotspot"
          java-version: "11.0.11+9"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
            ~/.android/build-cache
            ~/.android/cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: ./gradlew assemble

      # Enabled new memory model for tests to workaround `MockEngine` freezing issue (after upgrading to Ktor 2.0.0).
      # https://github.com/JuulLabs/tuulbox/pull/168
      - run: ./gradlew --continue -Pkotlin.native.binary.memoryModel=experimental check

      - run: |
          set -o xtrace
          if [ ! -z "${{ secrets.SIGNING_KEY }}" ]; then
            ./gradlew \
              --no-parallel \
              -PVERSION_NAME="unspecified" \
              -PsigningInMemoryKey="${{ secrets.SIGNING_KEY }}" \
              -PsigningInMemoryKeyPassword="${{ secrets.SIGNING_PASSWORD }}" \
              publishToMavenLocal
          else
            ./gradlew \
              --no-parallel \
              -PVERSION_NAME="unspecified-SNAPSHOT" \
              publishToMavenLocal
          fi
        if: ${{ runner.os == 'macOS' && github.repository_owner == 'JuulLabs' }}

      - run: ./gradlew jacocoTestReport
        if: runner.os == 'Linux'

      - uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: '**/build/test-results/**/*.xml'
          report_individual_runs: 'true'
        if: runner.os == 'Linux'

      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
        if: runner.os == 'Linux'

      - run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
